0.30.3 (2015-10-08)
------------------
- added `auth_type` to `oauth_code__url_dialog` methods (see https://developers.facebook.com/docs/facebook-login/permissions/v2.5#adding)
- added `access_token` arg to `api_proxy`
- cleaned up some misc formatting

0.30.2 (2015-04-09)
------------------
- fixed wrong kwargs on `oauth_code__url_access_token` and `self.oauth_code__get_access_token`


0.30.0 (2015-04-01)
------------------
- added in corred BSD license
- merging in changes from kalilou/facebook_utils


0.20.3 (2014-07-17)
------------------
- updated batch process logic to be backwards compatible.


0.20.2 (2013-05-21)
------------------
- updated batch process logic to be backwards compatible.


0.20.1 (2013-05-21)
------------------
- added in ssl_verify param to __init__ and api_proxy calls


0.20.0 (2013-05-20)
------------------

- migrated to requests.  this sucks less.


0.19 (2013-05-7)
------------------

- catching the following exceptions:
	httplib.BadStatusLine
	httplib.InvalidUrl
	urllib2.URLError
- ensured correct ordering of exceptions caught


0.18 (2013-05-7)
------------------

- batch requests to the graph return a json document , where the 'body' of each page is a (escaped) json document.  a second json decoding is necessary.


0.17 (2013-05-7)
------------------
- added the following exception clases ( inheritance shown )

	ApiError
		ApiAuthError
			ApiAuthExpiredError
		ApiApplicationError
		ApiResponseError
		ApiRuntimeError
			ApiRuntimeVerirficationFormatError
			ApiRuntimeGrantError
			ApiRuntimeScopeError
			ApiRuntimeGraphMethodError
		ApiUnhandledError

- extended exceptions to include the originally raised error ( `raised` ) and the the `response` if available

- added format checking to the response during batch requests

- extended unit tests to ensure everything works.  they could be better

- consolidated the parsing of the response into the api_proxy.  facebook's graph has different response types and behaviors.  this helps consolidate it for developers.

- added `mask_unhandled_exceptions` kwarg to hub init.
	1. this defaults to False
	2. this is just testing.  please don't rely on it. it could go away.
	when set to True, it wraps uncaught exceptions in an ApiUnhandledError exception.  This allows you to only care about pass/fail if needed


0.16 (2013-05-2)
------------------
- added AuthException to better catch auth failures


0.15 (2013-01-2)
------------------
- Adding Facebook OpenGraph actions API support
-- graph__action_create
-- graph__action_delete
-- graph__action_list

tests are tbd

0.14 (2012-04-16)
------------------
- Updated to Pyramid Classifier


0.13 (2012-03-23)
------------------
- added support for extending access tokens see https://developers.facebook.com/roadmap/offline-access-removal/


0.12 (2012-01-26)
------------------
- added 'verify_signed_request' , which does exactly what the name suggests


0.11 (2012-01-26)
------------------
- turned FacebookPyramid into a subclass of FacebookHub, and overloaded some methods with calls to the original.  This removed a need for staching a FacebookHub object.
- renamed two functions that improperly suggested their functionality.
-- deprecated 'graph__url_me' ; replaced with 'graph__url_me_for_access_token'
-- deprecated 'graph__get_profile' ; replaced with 'graph__get_profile_for_access_token'
- started planning real tests using ENV vars


0.1 (2012-01-25)
------------------
- initial release
